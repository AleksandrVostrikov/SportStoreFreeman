@page "/admin/products"
@page "/admin"
@using SportStoreFreeman.Repositories.Db;
@inherits OwningComponentBase<IStoreRepository>

    <table class="table table-sm table-striped table-bordered">
        <thead>
            <tr>
                <th>ID</th>
                <th>Товар</th>
                <th>Категория</th>
                <th>Цена</th>
            </tr>
        </thead>
        <tbody>
        @if (ProductData?.Count() > 0)
        {
            @foreach (var p in ProductData)
            {
                <tr>
                    <td>@p.ProductId</td>
                    <td>@p.Name</td>
                    <td>@p.Category</td>
                    <td>@p.Price.ToString("c")</td>
                    <td>
                        <NavLink class="btn btn-info btn-sm"
                         href="@GetDetailUrl(p.ProductId)">Детали</NavLink>
                        <NavLink class="btn btn-warning btn-sm"
                         href="@GetEditUrl(p.ProductId)">Изменить</NavLink>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="5" class="text-center">Нет товаров</td>
            </tr>
        }
        </tbody>
    </table>

@code{
    public IStoreRepository Repository => Service;
    public IEnumerable<Product> ProductData { get; set; }
    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }
    public async Task UpdateData()
    {
        ProductData = await Repository.Products.ToListAsync();
    }
    public string GetDetailUrl(Guid id) => $"/admin/products/details/{id}";
    public string GetEditUrl(Guid id) => $"/admin/products/edit/{id}";
}
